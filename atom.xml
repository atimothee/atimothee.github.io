<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Timothy Asiimwe]]></title>
  <link href="http://atimothee.github.io/atom.xml" rel="self"/>
  <link href="http://atimothee.github.io/"/>
  <updated>2016-10-22T00:28:29+03:00</updated>
  <id>http://atimothee.github.io/</id>
  <author>
    <name><![CDATA[Timothy Asiimwe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Run and Scale Firebase Queue Workers on Google App Engine]]></title>
    <link href="http://atimothee.github.io/blog/2016/10/18/how-to-run-and-scale-firebase-queue-workers-on-google-app-engine/"/>
    <updated>2016-10-18T12:23:32+03:00</updated>
    <id>http://atimothee.github.io/blog/2016/10/18/how-to-run-and-scale-firebase-queue-workers-on-google-app-engine</id>
    <content type="html"><![CDATA[<p>If you&rsquo;re using Firebase with a server to perform tasks like generating thumbnails of images, filtering message contents and censoring data, or fanning data out to multiple locations in your Firebase database, chances are you&rsquo;re using (or <a href="(https://firebase.googleblog.com/2015/05/introducing-firebase-queue_97.html">need to use</a>) <a href="https://github.com/firebase/firebase-queue">Firebase Queue</a>.</p>

<blockquote><p><a href="https://github.com/firebase/firebase-queue">Firebase Queue</a> is a fault-tolerant multi-worker job pipeline built on Firebase. It provides you with a way to organize workers or perform background work on your Firebase database or files.</p></blockquote>

<p>This isn&rsquo;t a tutorial on how to use firebase-queue, it is simply to show you how you can host &amp; run your queue workers in a scalable environment (<a href="https://cloud.google.com/appengine/">Google app engine</a>). <!-- more -->If you&rsquo;re want to learn how to use Firebase Queues, there&rsquo;s a great guide <a href="https://github.com/firebase/firebase-queue/blob/master/docs/guide.md">here</a>.</p>

<p><em><strong>Note:</strong> Firebase-queue is only available for Node.js, so we shall be using the <a href="https://cloud.google.com/appengine/docs/flexible/nodejs/runtime">App Engine Node.js flexible runtime</a>.</em></p>

<h1>Why Google Appengine?</h1>

<p><a href="https://cloud.google.com/appengine/">Google app engine</a> provides an easy to use platform for developers to build, deploy, manage and automatically scale services on Google’s infrastructure. There are no servers for you to provision or maintain.</p>

<h1>Installing</h1>

<p>Assuming you’ve already installed <a href="https://nodejs.org/">Node.js</a>, create a directory to hold your application, and make that your working directory.</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="gp">$ </span>mkdir myapp
<span class="gp">$ </span><span class="nb">cd </span>myapp</code></pre></div>


<p>Use the npm init command to create a <code>package.json</code> file for your application. For more information on how package.json works, see <a href="https://docs.npmjs.com/files/package.json">Specifics of npm’s package.json handling</a>.</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="gp">$ </span>npm init</code></pre></div>


<p>This command prompts you for a number of things, such as the name and version of your application. For now, you can simply hit RETURN to accept the defaults for most of them, with the following exception:</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell">entry point: <span class="o">(</span>index.js<span class="o">)</span></code></pre></div>


<p>Enter <code>app.js</code>, or whatever you want the name of the main file to be. If you want it to be <code>index.js</code>, hit RETURN to accept the suggested default file name.</p>

<p>Now install <a href="https://www.npmjs.com/package/express">Express</a>, <a href="https://www.npmjs.com/package/firebase">Firebase</a> &amp; <a href="https://www.npmjs.com/package/firebase-queue">Firebase-Queue</a> dependencies in the myapp directory and save them in the dependencies list.</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="gp">$ </span>npm install express --save
<span class="gp">$ </span>npm install firebase firebase-queue --save</code></pre></div>


<p>Next you need to <a href="https://cloud.google.com/sdk/docs/">install Google Cloud SDK</a>, in order to be able to deploy to app engine.</p>

<h1>Coding the app</h1>

<p>In the myapp directory, in the <code>app.js</code> file you created above, start your queue worker as shown below:</p>

<div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'express'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>

<span class="kd">var</span> <span class="nx">firebase</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">"firebase"</span><span class="p">);</span>
<span class="nx">firebase</span><span class="p">.</span><span class="nx">initializeApp</span><span class="p">({</span>
  <span class="na">serviceAccount</span><span class="p">:</span> <span class="s2">"service_account.json"</span><span class="p">,</span>
  <span class="na">databaseURL</span><span class="p">:</span> <span class="s2">"https://databaseName.firebaseio.com"</span>
<span class="p">});</span>

<span class="kd">var</span> <span class="nx">Queue</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">'firebase-queue'</span><span class="p">)</span>


<span class="c1">//start your worker here</span>
<span class="kd">var</span> <span class="nx">ref</span> <span class="o">=</span> <span class="nx">firebase</span><span class="p">.</span><span class="nx">database</span><span class="p">().</span><span class="nx">ref</span><span class="p">(</span><span class="s1">'queue'</span><span class="p">);</span>
<span class="kd">var</span> <span class="nx">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Queue</span><span class="p">(</span><span class="nx">ref</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">progress</span><span class="p">,</span> <span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Read and process task data</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>

  <span class="c1">// Do some work</span>
  <span class="nx">progress</span><span class="p">(</span><span class="mi">50</span><span class="p">);</span>

  <span class="c1">// Finish the task asynchronously</span>
  <span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">resolve</span><span class="p">();</span>
  <span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
<span class="p">});</span>


<span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">'/'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s1">'The Firebase Queue worker is running!'</span><span class="p">);</span>
<span class="p">});</span>

<span class="kd">var</span> <span class="nx">server</span> <span class="o">=</span> <span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">PORT</span> <span class="o">||</span> <span class="s1">'8080'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'App listening on port %s'</span><span class="p">,</span> <span class="nx">server</span><span class="p">.</span><span class="nx">address</span><span class="p">().</span><span class="nx">port</span><span class="p">);</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">'Press Ctrl+C to quit.'</span><span class="p">);</span>
<span class="p">});</span></code></pre></div>


<p>The above code starts a queue worker which simply logs the task data passed to it, and then starts an express server.
This worker will continue running for as long as the instance is running.</p>

<p>Next, you need to create an <code>app.yaml</code> file in the myapp directory, which will be used to deploy the app to appengine.</p>

<div class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="na">runtime</span><span class="pi">:</span> <span class="s">nodejs</span>
<span class="na">vm</span><span class="pi">:</span> <span class="s">true</span></code></pre></div>


<p>Before we can deploy, we need to edit the <code>"scripts"</code> and <code>"engines"</code> properties in the <code>package.json</code> file so that our app can run on app engine.</p>

<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="s2">"engines"</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nt">"node"</span><span class="p">:</span><span class="w"> </span><span class="s2">"~4.2"</span><span class="w">
  </span><span class="p">}</span><span class="err">,</span><span class="w">
</span><span class="s2">"scripts"</span><span class="err">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nt">"start"</span><span class="p">:</span><span class="w"> </span><span class="s2">"node app.js"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"monitor"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nodemon app.js"</span><span class="p">,</span><span class="w">
    </span><span class="nt">"deploy"</span><span class="p">:</span><span class="w"> </span><span class="s2">"gcloud app deploy"</span><span class="w">
  </span><span class="p">}</span></code></pre></div>


<p>Finally, deploy the app to appengine:</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="gp">$ </span>gcloud app deploy app.yaml</code></pre></div>


<p>To test the worker, you can push an object with some data to the tasks subtree of your queue:</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="c"># Using curl in shell</span>
<span class="gp">$ </span>curl -X POST -d <span class="s1">'{"foo": "bar"}'</span> https://databaseName.firebaseio.com/queue/tasks.json</code></pre></div>


<p>You should see &lsquo;{&ldquo;foo&rdquo;: &ldquo;bar&rdquo;}&rsquo; somewhere in your logs, or which ever data you posted.</p>

<p>Although the <code>app.js</code> code above initialized only one worker, Queue Workers can take options to specify the number of initial workers to run simultaneously for a single node.js thread.</p>

<div class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'specId'</span><span class="p">:</span> <span class="s1">'spec_1'</span><span class="p">,</span>
  <span class="s1">'numWorkers'</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
<span class="p">};</span>

<span class="kd">var</span> <span class="nx">queue</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Queue</span><span class="p">(</span><span class="nx">ref</span><span class="p">,</span> <span class="nx">options</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">progress</span><span class="p">,</span> <span class="nx">resolve</span><span class="p">,</span> <span class="nx">reject</span><span class="p">)</span> <span class="p">{</span>
  <span class="p">...</span>
<span class="p">});</span></code></pre></div>


<p>The above code initializes 5 workers on a single thread. Depending on your application needs and CPU resources, you may want to initalize multiple workers.</p>

<h1>Scaling on App engine</h1>

<p>Every app engine application is auto-scaled by default basing on certain default parameters. However, you can control how/when you want your app to be scaled. You can use either auto or manual scaling, depending in your application needs.</p>

<p>Here&rsquo;s an example of how to configure your <code>app.yaml</code> for auto-scaling:</p>

<div class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="c1">#auto scaling</span>
<span class="na">automatic_scaling</span><span class="pi">:</span>
  <span class="na">min_num_instances</span><span class="pi">:</span> <span class="s">1</span>
  <span class="na">max_num_instances</span><span class="pi">:</span> <span class="s">10</span>
  <span class="na">cool_down_period_sec</span><span class="pi">:</span> <span class="s">120</span> <span class="c1"># default value</span>
  <span class="na">cpu_utilization</span><span class="pi">:</span>
    <span class="na">target_utilization</span><span class="pi">:</span> <span class="s">0.75</span></code></pre></div>


<p>You only need to specify the minimum and maximum number of instances when using auto-scaling, the rest are optional.
App engine will average CPU use across running instances. The value your specify for <code>target_utilization</code> is used to determine whether to reduce or increase the number of instances.</p>

<p>Manual scaling is suitable if you can reliably predict your worker&rsquo;s load @ all times. Auto-scaling is more suitable if your app (queue workers) experiences spikes in usage. See example below:</p>

<div class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="c1">#manual scaling</span>
<span class="na">manual_scaling</span><span class="pi">:</span>
  <span class="na">instances</span><span class="pi">:</span> <span class="s">3</span></code></pre></div>


<p>You can also specify the computing power/resources for each instance, depending on your needs:</p>

<div class="highlight"><pre><code class="language-yaml" data-lang="yaml"><span class="na">resources</span><span class="pi">:</span>
  <span class="na">cpu</span><span class="pi">:</span> <span class="s">.5</span>
  <span class="na">memory_gb</span><span class="pi">:</span> <span class="s">1.3</span>
  <span class="na">disk_size_gb</span><span class="pi">:</span> <span class="s">10</span></code></pre></div>


<p><code>cpu</code> represents the number of cores (it can be less than a fraction). <code>memory_gb</code> is RAM in GB.</p>

<blockquote><p>The beauty of Firebase-Queue is that multiple queue workers can be initialized on multiple machines and Firebase-Queue will ensure that only one worker is processing a single queue task at a time. So using Google App Engine is a nice way to autoscale your firebase worker-queues.</p></blockquote>

<p>And that&rsquo;s how you can effortlessly scale firebase queue workers with Google App engine. Got any questions? Ping me on Twitter: <a href="https://twitter.com/TimAsiimwe">@TimAsiimwe</a>, I’d be happy to chat!</p>

<p><em><strong>Note:</strong> In order to use Flexible VMs, you need to enable billing for your project in the <a href="https://console.cloud.google.com">Google Cloud Console</a>.</em></p>

<p>For more on how to configure your app engine app, read <a href="https://cloud.google.com/appengine/docs/flexible/nodejs/configuring-your-app-with-app-yaml">the documentation</a>.</p>

<p>References:
<a href="https://expressjs.com/en/starter/installing.html">https://expressjs.com/en/starter/installing.html</a>
<a href="https://github.com/firebase/firebase-queue/blob/master/docs/guide.md">https://github.com/firebase/firebase-queue/blob/master/docs/guide.md</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Use Facebook Account Kit to Authenticate Firebase App Users on Android]]></title>
    <link href="http://atimothee.github.io/blog/2016/09/17/how-to-use-facebook-account-kit-to-authenticate-firebase-app-users-on-android/"/>
    <updated>2016-09-17T15:53:28+03:00</updated>
    <id>http://atimothee.github.io/blog/2016/09/17/how-to-use-facebook-account-kit-to-authenticate-firebase-app-users-on-android</id>
    <content type="html"><![CDATA[<p>A few months ago Facebook released <a href="https://developers.facebook.com/docs/accountkit/overview">Account Kit</a> which &ldquo;helps people quickly and easily register and log into your app using their phone number or email address as a passwordless credential&rdquo;.</p>

<p>Account Kit is really really helpful for a couple of reasons; users don&rsquo;t need to remember a password for your app, it supports SMS-based authentication for hundreds of countries, and it&rsquo;s really easy to setup.</p>

<!-- more -->


<p><a href="https://firebase.google.com/">The Firebase platform</a> provides a number of tools like <a href="https://firebase.google.com/docs/auth/">Firebase Authentication</a> which remove alot of the friction involved in building high quality apps. Using Firebase Authentication, you can easily integrate Facebook, Twitter, and Google Login in your Android app.</p>

<p>Unfortunately, the Firebase Authentication SDK does not currently provide a direct way to authenticate users with Facebook Account Kit, however, this can be achieved using <a href="https://firebase.google.com/docs/auth/android/custom-auth">Firebase Custom Authentication</a>. This tutorial will show you how. Firebase Custom authentication allow users to authenticate against an external or legacy authentication mechanism. We will treat Facebook Account Kit as a legacy authentication mechanism.</p>

<p>This tutorials assumes you&rsquo;ve already configured your android project to use Firebase Authentication. If you haven&rsquo;t yet, you can follow the instructions <a href="https://firebase.google.com/docs/android/setup">here</a>.
I also assume you&rsquo;ve already set up your app to use Facebook Account Kit. You can follow set up instructions <a href="https://developers.facebook.com/docs/accountkit/android">here</a>.</p>

<h2>Server setup</h2>

<p>To use Custom Authentication, we need to setup an authentication server, which creates custom tokens, which can then be used sign into the Firebase Authentication service in the android app.
Firebase only has Server SDKs for Java and NodeJS (at the moment), so you need to build your authentication server using one of the 2 languages. We will use Java for this tutorial, and we&rsquo;ll use <a href="https://cloud.google.com/appengine/docs/java/endpoints/">Google Appengine Cloud endpoints</a>, as our hosting solution, for simplicity (because all the code can live inside Android Studio).</p>

<p>You should be able to follow this tutorial without in-depth knowledge of how Google Cloud endpoints work. If you want a basic understanding of how they work, you can start <a href="https://cloud.google.com/appengine/docs/java/endpoints/helloendpoints-android-studio">here</a>.</p>

<p>Adding Cloud Endpoints to an Android Studio project is trivial. Go to File > New > New Module &hellip; and select Google Cloud Module as shown in screenshots below.</p>

<p><img src="http://atimothee.github.io/images/android_studio_new_module_screenshot.png"></p>

<p><img src="http://atimothee.github.io/images/new_google_cloud_module_screenshot.png"></p>

<p>Once your project&rsquo;s done building, you should have a new module/directory called backend, or whatever you named your Google cloud module.</p>

<p>Next, you need to add Firebase Server SDK and <a href="http://square.github.io/retrofit/">Retrofit</a> to the build.gradle for the backend module as shown below.
We will be using Retrofit to make a call to the <a href="https://developers.facebook.com/docs/accountkit/graphapi">AccountsKit Graph API</a> to access the user&rsquo;s basic information and save to Firebase, and also use it to create a custom token.
<strong>Please note that you must not use retrofit v2 or higher (if you&rsquo;re using Cloud endpoints), because it&rsquo;s not compatible with appengine runtime environment.</strong></p>

<div class="highlight"><pre><code class="language-gradle" data-lang="gradle"><span class="n">compile</span> <span class="s1">'com.squareup.retrofit:retrofit:1.9.0'</span>
<span class="n">compile</span> <span class="s1">'com.squareup.okhttp:okhttp:2.7.2'</span>

<span class="n">compile</span> <span class="s1">'com.google.firebase:firebase-server-sdk:[3.0.0,)'</span></code></pre></div>


<p>First, we need to create the Bean that will return the custom token to the user.</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">CustomTokenBean</span> <span class="o">{</span>
    <span class="n">String</span> <span class="n">token</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setData</span><span class="o">(</span><span class="n">String</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">token</span> <span class="o">=</span> <span class="n">data</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getData</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">token</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></div>


<p>Next, we will use retrofit to retrieve the user&rsquo;s details, using the Account Kit access token.</p>

<p>Here&rsquo;s the class that matches the JSON returned by the AccountsKit Graph API. We will use it as the return type for the retrofit function.</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">AccountsKitUser</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">AccountsKitUser</span><span class="o">(){</span>

    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">String</span> <span class="n">id</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">Phone</span> <span class="n">phone</span><span class="o">;</span>

    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="n">String</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="n">Phone</span> <span class="nf">getPhone</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">phone</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setPhone</span><span class="o">(</span><span class="n">Phone</span> <span class="n">phone</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">phone</span> <span class="o">=</span> <span class="n">phone</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Phone</span><span class="o">{</span>
        <span class="kd">public</span> <span class="nf">Phone</span><span class="o">(){</span>

        <span class="o">}</span>

        <span class="kd">private</span> <span class="n">String</span> <span class="n">number</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">String</span> <span class="n">countryPrefix</span><span class="o">;</span>
        <span class="kd">private</span> <span class="n">String</span> <span class="n">nationalNumber</span><span class="o">;</span>

        <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNumber</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">number</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNumber</span><span class="o">(</span><span class="n">String</span> <span class="n">number</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">=</span> <span class="n">number</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="n">String</span> <span class="nf">getCountryPrefix</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">countryPrefix</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setCountryPrefix</span><span class="o">(</span><span class="n">String</span> <span class="n">countryPrefix</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">countryPrefix</span> <span class="o">=</span> <span class="n">countryPrefix</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="n">String</span> <span class="nf">getNationalNumber</span><span class="o">()</span> <span class="o">{</span>
            <span class="k">return</span> <span class="n">nationalNumber</span><span class="o">;</span>
        <span class="o">}</span>

        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNationalNumber</span><span class="o">(</span><span class="n">String</span> <span class="n">nationalNumber</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">this</span><span class="o">.</span><span class="na">nationalNumber</span> <span class="o">=</span> <span class="n">nationalNumber</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></div>


<p>Here&rsquo;s the retrofit adapter and interface that retrieves the user information.</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">API_BASE_URL</span> <span class="o">=</span> <span class="s">"https://graph.accountkit.com"</span><span class="o">;</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="n">RestAdapter</span><span class="o">.</span><span class="na">Builder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">RestAdapter</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
            <span class="o">.</span><span class="na">setEndpoint</span><span class="o">(</span><span class="n">API_BASE_URL</span><span class="o">)</span>
            <span class="o">.</span><span class="na">setClient</span><span class="o">(</span><span class="k">new</span> <span class="n">UrlFetchClient</span><span class="o">());</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="o">&lt;</span><span class="n">S</span><span class="o">&gt;</span> <span class="n">S</span> <span class="nf">createService</span><span class="o">(</span><span class="n">Class</span><span class="o">&lt;</span><span class="n">S</span><span class="o">&gt;</span> <span class="n">serviceClass</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">RestAdapter</span> <span class="n">adapter</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="k">return</span> <span class="n">adapter</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">serviceClass</span><span class="o">);</span>
    <span class="o">}</span>


    <span class="kd">public</span>  <span class="kd">interface</span> <span class="nc">GetUserDetailsService</span><span class="o">{</span>
        <span class="nd">@GET</span><span class="o">(</span><span class="s">"/v1.0/me"</span><span class="o">)</span>
        <span class="n">AccountsKitUser</span> <span class="nf">getUserDetails</span><span class="o">(</span><span class="nd">@Query</span><span class="o">(</span><span class="s">"access_token"</span><span class="o">)</span> <span class="n">String</span> <span class="n">accessToken</span><span class="o">);</span>

    <span class="o">}</span></code></pre></div>


<p>Once we have the user id, we can then use the Firebase SDK to create a custom token.</p>

<p>In order to communicate with the Firebase service, you will need a service account, and configuration file with your service account credentials. Follow the instructions <a href="https://firebase.google.com/docs/server/setup">here</a> to obtain a JSON configuration file and add it to your backend module (under the WEB-INF folder).</p>

<p>Next, you need to add the json file as a resource to the appengine-web.xml to allow read access to the service account json file. The appengine-web.xml file is located in the WEB-INF folder. If you cannot see this folder, you may need to switch to the project view in Android Studio.</p>

<div class="highlight"><pre><code class="language-xml" data-lang="xml"><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;appengine-web-app</span> <span class="na">xmlns=</span><span class="s">"http://appengine.google.com/ns/1.0"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;application&gt;</span>project-id<span class="nt">&lt;/application&gt;</span>
    <span class="nt">&lt;version&gt;</span>1<span class="nt">&lt;/version&gt;</span>
    <span class="nt">&lt;module&gt;</span>backend<span class="nt">&lt;/module&gt;</span>
    <span class="nt">&lt;threadsafe&gt;</span>true<span class="nt">&lt;/threadsafe&gt;</span>

    <span class="nt">&lt;system-properties&gt;</span>
        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">"java.util.logging.config.file"</span> <span class="na">value=</span><span class="s">"WEB-INF/logging.properties"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;/system-properties&gt;</span>
    <span class="nt">&lt;resource-files&gt;</span>
        <span class="nt">&lt;include</span> <span class="na">path=</span><span class="s">"/**.json"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/resource-files&gt;</span>
<span class="nt">&lt;/appengine-web-app&gt;</span></code></pre></div>


<p><strong>Please note that the json configuration file must be in the WEB-INF folder, otherwise it will not be accessible in code.</strong></p>

<p>Since Firebase, is now part of Google Cloud Platform, <strong>a Firebase project == a Google Cloud project</strong>, and therfore can access other Google Cloud APIs and services, therefore you can use your firebase-project-id as the project-id in the appengine-web.xml.
Alternatively, you could create a new Google cloud project, and specify the application name. (Please note: Appengine has a free quota, and you should be able to signup without needing a credit card.)</p>

<p>We then create an endpoint, that creates and returns the custom token to the user. You can use the users phone number or the their id as the uid (depending on your app&rsquo;s requirements).</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="nd">@ApiMethod</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">"getCustomToken"</span><span class="o">)</span>
    <span class="kd">public</span> <span class="n">CustomTokenBean</span> <span class="nf">getCustomToken</span><span class="o">(</span><span class="nd">@Named</span><span class="o">(</span><span class="s">"access_token"</span><span class="o">)</span> <span class="n">String</span> <span class="n">accessToken</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">FileNotFoundException</span> <span class="o">{</span>


        <span class="n">GetUserDetailsService</span> <span class="n">getUserDetailsService</span> <span class="o">=</span> <span class="n">createService</span><span class="o">(</span><span class="n">GetUserDetailsService</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
        <span class="n">AccountsKitUser</span> <span class="n">retrofitResponse</span> <span class="o">=</span> <span class="n">getUserDetailsService</span><span class="o">.</span><span class="na">getUserDetails</span><span class="o">(</span><span class="n">accessToken</span><span class="o">);</span>
        <span class="n">String</span> <span class="n">uid</span> <span class="o">=</span> <span class="n">retrofitResponse</span><span class="o">.</span><span class="na">getPhone</span><span class="o">().</span><span class="na">getNumber</span><span class="o">();</span>
        <span class="n">FirebaseOptions</span> <span class="n">options</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
        <span class="n">options</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FirebaseOptions</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
                <span class="o">.</span><span class="na">setServiceAccount</span><span class="o">(</span><span class="k">new</span> <span class="n">FileInputStream</span><span class="o">(</span>
                        <span class="k">new</span> <span class="nf">File</span><span class="o">(</span><span class="s">"WEB-INF/json_file_name.json"</span><span class="o">)))</span>
                <span class="o">.</span><span class="na">setDatabaseUrl</span><span class="o">(</span><span class="s">"https://firebase-project-id.firebaseio.com/"</span><span class="o">)</span>
                <span class="o">.</span><span class="na">build</span><span class="o">();</span>
        <span class="n">FirebaseApp</span><span class="o">.</span><span class="na">initializeApp</span><span class="o">(</span><span class="n">options</span><span class="o">);</span>
        <span class="n">String</span> <span class="n">customToken</span> <span class="o">=</span> <span class="n">FirebaseAuth</span><span class="o">.</span><span class="na">getInstance</span><span class="o">().</span><span class="na">createCustomToken</span><span class="o">(</span><span class="n">uid</span><span class="o">);</span>

        <span class="n">CustomTokenBean</span> <span class="n">response</span> <span class="o">=</span> <span class="k">new</span> <span class="n">CustomTokenBean</span><span class="o">();</span>
        <span class="n">response</span><span class="o">.</span><span class="na">setData</span><span class="o">(</span><span class="n">customToken</span><span class="o">);</span>

        <span class="k">return</span> <span class="n">response</span><span class="o">;</span>
    <span class="o">}</span></code></pre></div>


<p>Next, you need to deploy the backend module to appengine, in order to be able to use it. To do this, go to Build> Deploy Module to Appengine&hellip; and login with your google account.</p>

<h2>Now, for the Android part&hellip;</h2>

<p>In your sign-in activity&rsquo;s onCreate method, get the shared instance of the FirebaseAuth object:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">private</span> <span class="n">FirebaseAuth</span> <span class="n">mAuth</span><span class="o">;</span>
<span class="c1">// ...</span>
<span class="n">mAuth</span> <span class="o">=</span> <span class="n">FirebaseAuth</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span></code></pre></div>


<p>Create an AsyncTask which sends an AccountKit token, to the authentication server, receives the custom token from the authenticaiton server, and then signs in the user into Firebase using the custom token:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">class</span> <span class="nc">LoginUserAsyncTask</span> <span class="kd">extends</span> <span class="n">AsyncTask</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Void</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="o">{</span>


        <span class="nd">@Override</span>
        <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onPostExecute</span><span class="o">(</span><span class="n">String</span> <span class="n">token</span><span class="o">)</span> <span class="o">{</span>
            <span class="kd">super</span><span class="o">.</span><span class="na">onPostExecute</span><span class="o">(</span><span class="n">token</span><span class="o">);</span>
            <span class="c1">//uses returned custom token to login to Firebase</span>
            <span class="n">mAuth</span><span class="o">.</span><span class="na">signInWithCustomToken</span><span class="o">(</span><span class="n">token</span><span class="o">).</span><span class="na">addOnCompleteListener</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="k">new</span> <span class="n">OnCompleteListener</span><span class="o">&lt;</span><span class="n">AuthResult</span><span class="o">&gt;()</span> <span class="o">{</span>
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onComplete</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="n">Task</span><span class="o">&lt;</span><span class="n">AuthResult</span><span class="o">&gt;</span> <span class="n">task</span><span class="o">)</span> <span class="o">{</span>

                    <span class="c1">// If sign in fails, display a message to the user. If sign in succeeds</span>
                    <span class="c1">// the auth state listener will be notified and logic to handle the</span>
                    <span class="c1">// signed in user can be handled in the listener.</span>
                    <span class="k">if</span> <span class="o">(!</span><span class="n">task</span><span class="o">.</span><span class="na">isSuccessful</span><span class="o">())</span> <span class="o">{</span>
                        <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="s">"Authentication failed."</span><span class="o">,</span>
                                <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_SHORT</span><span class="o">).</span><span class="na">show</span><span class="o">();</span>
                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">});</span>
        <span class="o">}</span>


        <span class="nd">@Override</span>
        <span class="kd">protected</span> <span class="n">String</span> <span class="nf">doInBackground</span><span class="o">(</span><span class="n">String</span><span class="o">...</span> <span class="n">strings</span><span class="o">)</span> <span class="o">{</span>

            <span class="c1">//sends AccountKit token to authentication server</span>
            <span class="n">String</span> <span class="n">accountsKitAccessToken</span> <span class="o">=</span> <span class="n">strings</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
            <span class="n">MyApi</span><span class="o">.</span><span class="na">Builder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MyApi</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">AndroidHttp</span><span class="o">.</span><span class="na">newCompatibleTransport</span><span class="o">(),</span> <span class="k">new</span> <span class="n">AndroidJsonFactory</span><span class="o">(),</span> <span class="kc">null</span><span class="o">);</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">setRootUrl</span><span class="o">(</span><span class="s">"https://backend-dot-fb-accountkit-auth-demo.appspot.com/_ah/api"</span><span class="o">);</span>
            <span class="n">builder</span><span class="o">.</span><span class="na">setApplicationName</span><span class="o">(</span><span class="s">"fb-accountkit-auth-demo"</span><span class="o">);</span>
            <span class="n">MyApi</span> <span class="n">service</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">build</span><span class="o">();</span>
            <span class="k">try</span> <span class="o">{</span>
                <span class="n">CustomTokenBean</span> <span class="n">customTokenBean</span> <span class="o">=</span> <span class="n">service</span><span class="o">.</span><span class="na">getCustomToken</span><span class="o">(</span><span class="n">accountsKitAccessToken</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
                <span class="k">return</span> <span class="n">customTokenBean</span><span class="o">.</span><span class="na">getData</span><span class="o">();</span>
            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>


            <span class="o">}</span>
            <span class="k">return</span> <span class="kc">null</span><span class="o">;</span>
        <span class="o">}</span>
    <span class="o">}</span></code></pre></div>


<p>At the point where you initiate the user login via AccountsKit. You must set the responseType to TOKEN, so that an access token is returned to the calling activity once the login process is complete.</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onLoginPhone</span><span class="o">(</span><span class="kd">final</span> <span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">final</span> <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">AccountKitActivity</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
        <span class="n">AccountKitConfiguration</span><span class="o">.</span><span class="na">AccountKitConfigurationBuilder</span> <span class="n">configurationBuilder</span> <span class="o">=</span>
                <span class="k">new</span> <span class="n">AccountKitConfiguration</span><span class="o">.</span><span class="na">AccountKitConfigurationBuilder</span><span class="o">(</span>
                        <span class="n">LoginType</span><span class="o">.</span><span class="na">PHONE</span><span class="o">,</span>
                        <span class="n">AccountKitActivity</span><span class="o">.</span><span class="na">ResponseType</span><span class="o">.</span><span class="na">TOKEN</span><span class="o">);</span> <span class="c1">// you must use TOKEN response type</span>
        <span class="n">intent</span><span class="o">.</span><span class="na">putExtra</span><span class="o">(</span>
                <span class="n">AccountKitActivity</span><span class="o">.</span><span class="na">ACCOUNT_KIT_ACTIVITY_CONFIGURATION</span><span class="o">,</span>
                <span class="n">configurationBuilder</span><span class="o">.</span><span class="na">build</span><span class="o">());</span>
        <span class="n">startActivityForResult</span><span class="o">(</span><span class="n">intent</span><span class="o">,</span> <span class="n">APP_REQUEST_CODE</span><span class="o">);</span>
    <span class="o">}</span></code></pre></div>


<p><strong>Please note that to be able to use the TOKEN response type, you must enable client access token flow in the Facebook developer console, as shown in the screenshot below.</strong></p>

<p><img src="http://atimothee.github.io/images/facebook_console_screenshot.png"></p>

<p>Next, you need to adapt the onActivityResult method in the Activity that initates the Account Kit login, to execute the LoginUserAsyncTask, once the accountkit user access token is obtained.</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onActivityResult</span><span class="o">(</span>
            <span class="kd">final</span> <span class="kt">int</span> <span class="n">requestCode</span><span class="o">,</span>
            <span class="kd">final</span> <span class="kt">int</span> <span class="n">resultCode</span><span class="o">,</span>
            <span class="kd">final</span> <span class="n">Intent</span> <span class="n">data</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onActivityResult</span><span class="o">(</span><span class="n">requestCode</span><span class="o">,</span> <span class="n">resultCode</span><span class="o">,</span> <span class="n">data</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">requestCode</span> <span class="o">==</span> <span class="n">APP_REQUEST_CODE</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// confirm that this response matches your request</span>
            <span class="n">AccountKitLoginResult</span> <span class="n">loginResult</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="na">getParcelableExtra</span><span class="o">(</span><span class="n">AccountKitLoginResult</span><span class="o">.</span><span class="na">RESULT_KEY</span><span class="o">);</span>
            <span class="n">String</span> <span class="n">toastMessage</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
            <span class="k">if</span> <span class="o">(</span><span class="n">loginResult</span><span class="o">.</span><span class="na">getError</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">toastMessage</span> <span class="o">=</span> <span class="n">loginResult</span><span class="o">.</span><span class="na">getError</span><span class="o">().</span><span class="na">getErrorType</span><span class="o">().</span><span class="na">getMessage</span><span class="o">();</span>
                <span class="c1">//showErrorActivity(loginResult.getError());</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="n">loginResult</span><span class="o">.</span><span class="na">wasCancelled</span><span class="o">())</span> <span class="o">{</span>
                <span class="n">toastMessage</span> <span class="o">=</span> <span class="s">"Login Cancelled"</span><span class="o">;</span>
            <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">loginResult</span><span class="o">.</span><span class="na">getAccessToken</span><span class="o">()</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>

                    <span class="n">String</span> <span class="n">accessToken</span> <span class="o">=</span> <span class="n">loginResult</span><span class="o">.</span><span class="na">getAccessToken</span><span class="o">().</span><span class="na">getToken</span><span class="o">();</span>

                    <span class="k">new</span> <span class="nf">LoginUserAsyncTask</span><span class="o">().</span><span class="na">execute</span><span class="o">(</span><span class="n">accessToken</span><span class="o">);</span>

                    <span class="n">toastMessage</span> <span class="o">=</span> <span class="s">"Success:"</span> <span class="o">+</span> <span class="n">loginResult</span><span class="o">.</span><span class="na">getAccessToken</span><span class="o">().</span><span class="na">getAccountId</span><span class="o">();</span>

                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="n">toastMessage</span> <span class="o">=</span> <span class="s">"Login failed"</span><span class="o">;</span>
                <span class="o">}</span>

            <span class="o">}</span>
            <span class="n">Toast</span><span class="o">.</span><span class="na">makeText</span><span class="o">(</span>
                    <span class="k">this</span><span class="o">,</span>
                    <span class="n">toastMessage</span><span class="o">,</span>
                    <span class="n">Toast</span><span class="o">.</span><span class="na">LENGTH_LONG</span><span class="o">)</span>
                    <span class="o">.</span><span class="na">show</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span></code></pre></div>


<p>Finally, you need to setup an AuthStateListener that responds to changes in the user&rsquo;s sign-in state:</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">private</span> <span class="n">FirebaseAuth</span><span class="o">.</span><span class="na">AuthStateListener</span> <span class="n">mAuthListener</span><span class="o">;</span>

<span class="c1">// ...</span>

<span class="nd">@Override</span>
<span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// ...</span>
    <span class="n">mAuthListener</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FirebaseAuth</span><span class="o">.</span><span class="na">AuthStateListener</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onAuthStateChanged</span><span class="o">(</span><span class="nd">@NonNull</span> <span class="n">FirebaseAuth</span> <span class="n">firebaseAuth</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">FirebaseUser</span> <span class="n">user</span> <span class="o">=</span> <span class="n">firebaseAuth</span><span class="o">.</span><span class="na">getCurrentUser</span><span class="o">();</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">user</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                    <span class="c1">// User is signed into Firebase</span>

                <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                    <span class="c1">// User is signed out of Firebase</span>
                    <span class="c1">// Check if user is still signed into FB AccountKit</span>
                    <span class="n">AccessToken</span> <span class="n">accountKitAccessToken</span> <span class="o">=</span> <span class="n">AccountKit</span><span class="o">.</span><span class="na">getCurrentAccessToken</span><span class="o">();</span>

                    <span class="k">if</span> <span class="o">(</span><span class="n">accountKitAccessToken</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">//user is already logged into FB AccountKit, skip login, and try to authenticate Firebase</span>
                        <span class="k">new</span> <span class="nf">LoginUserAsyncTask</span><span class="o">().</span><span class="na">execute</span><span class="o">(</span><span class="n">accountKitAccessToken</span><span class="o">.</span><span class="na">getToken</span><span class="o">());</span>
                        <span class="n">startActivity</span><span class="o">(</span><span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">,</span> <span class="n">LoggedInActivity</span><span class="o">.</span><span class="na">class</span><span class="o">));</span>


                    <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
                        <span class="c1">//Handle new or logged out user</span>
                    <span class="o">}</span>

                <span class="o">}</span>
                <span class="c1">// ...</span>
            <span class="o">}</span>
        <span class="o">};</span>
    <span class="c1">// ...</span>
<span class="o">}</span>

<span class="nd">@Override</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStart</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">super</span><span class="o">.</span><span class="na">onStart</span><span class="o">();</span>
    <span class="n">mAuth</span><span class="o">.</span><span class="na">addAuthStateListener</span><span class="o">(</span><span class="n">mAuthListener</span><span class="o">);</span>
    <span class="c1">// ...</span>
<span class="o">}</span>

<span class="nd">@Override</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">onStop</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">super</span><span class="o">.</span><span class="na">onStop</span><span class="o">();</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">mAuthListener</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">mAuth</span><span class="o">.</span><span class="na">removeAuthStateListener</span><span class="o">(</span><span class="n">mAuthListener</span><span class="o">);</span>
    <span class="o">}</span>
    <span class="c1">// ...</span>
<span class="o">}</span></code></pre></div>


<p>In this post, we looked at how to authenticate Firebase app users using Facebook AccountKit. The code is available on <a href="https://github.com/atimothee/accountkit-firebase-auth-android">Github</a>. The best way to utilize this post is to clone the app, import it into Android Studio and play with the code yourself using this post as a guide.</p>

<p>It should be possible to write your authentication server in NodeJS, or any other Java framework, and run it wherever you like. You can read more <a href="https://firebase.google.com/docs/auth/server/">here</a> on how to implement custom authentication.</p>

<p>Got any questions? Ping me on Twitter: <a href="https://twitter.com/TimAsiimwe">@TimAsiimwe</a>, I’d be happy to chat!</p>

<h4>References:</h4>

<p><a href="https://github.com/square/retrofit/issues/1149">https://github.com/square/retrofit/issues/1149</a>
<a href="http://stackoverflow.com/questions/31507370/reading-java-resource-files-in-google-appengine">http://stackoverflow.com/questions/31507370/reading-java-resource-files-in-google-appengine</a>
<a href="https://firebase.google.com/docs/auth/android/custom-auth">https://firebase.google.com/docs/auth/android/custom-auth</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Easily Set Up an Offline Weather API Server for Your Sunshine App]]></title>
    <link href="http://atimothee.github.io/blog/2015/02/23/how-to-easily-set-up-an-offline-weather-api-for-your-sunshine-app/"/>
    <updated>2015-02-23T01:11:58+03:00</updated>
    <id>http://atimothee.github.io/blog/2015/02/23/how-to-easily-set-up-an-offline-weather-api-for-your-sunshine-app</id>
    <content type="html"><![CDATA[<p>So you&rsquo;re eager to get on with Lesson 2 of the <a href="https://www.udacity.com/course/ud853">Udacity Android fundamentals course</a> but if you&rsquo;re like most students in our <a href="http://developerstudyjams.com/">study jam</a>, you don&rsquo;t have good internet access &amp; you&rsquo;ve been using offline course materials. The course has probably been going great till you hit the internet roadblock in lesson 2 (Connecting Sunshine to the cloud). The app needs internet to fetch the weather data.</p>

<!-- more -->


<p>This tutorial shows you a simple work around. We&rsquo;ll bring the &lsquo;cloud&rsquo; to your local machine. Well technically, just a tiny little bit of the cloud that you need to test your app. You don&rsquo;t need internet to fetch weather data. The only difference is that your data will be static and therefore not accurate but the data accuracy shouldn&rsquo;t be a big deal when trying to learn how to fetch weather data into the app.</p>

<blockquote><p>For those not familiar with the Android Fundamentals course, the cloud in this context simply refers to the <a href="http://openweathermap.org/api">Open Weather Map API</a>.</p></blockquote>

<p>This tutorial assumes you have python installed and have properly set your environment variables on your development PC. If you dont have it, follow any of these; <a href="http://www.howtogeek.com/197947/how-to-install-python-on-windows/">windows tutorial</a>, <a href="http://www.cyberciti.biz/faq/install-python-linux/">linux</a> or <a href="http://docs.python-guide.org/en/latest/starting/install/osx/">mac</a>.</p>

<p>If you&rsquo;re not sure, simply type out <code>$ python --version</code> in your terminal (for unix users) or command prompt for windows users.</p>

<p>If you have python installed, you should have received a message with the version of python installed.</p>

<p>Next, open the built URL, which you&rsquo;re using in your app in the browser <a href="http://api.openweathermap.org/data/2.5/forecast/daily?q=kampala&amp;mode=json&amp;units=metric&amp;cnt=7">http://api.openweathermap.org/data/2.5/forecast/daily?q=kampala&amp;mode=json&amp;units=metric&amp;cnt=7</a> in my case. Note that the q param may change depending on your city.</p>

<p>Copy and paste the returned JSON into an empty file and save it as city_name.json.</p>

<p>This what my .json file showing forecast data for Kampala for the next seven days looks like</p>

<div class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="nt">"cod"</span><span class="p">:</span><span class="s2">"200"</span><span class="p">,</span><span class="nt">"message"</span><span class="p">:</span><span class="mf">0.03</span><span class="p">,</span><span class="nt">"city"</span><span class="p">:{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">232422</span><span class="p">,</span><span class="nt">"name"</span><span class="p">:</span><span class="s2">"Kampala"</span><span class="p">,</span><span class="nt">"coord"</span><span class="p">:{</span><span class="nt">"lon"</span><span class="p">:</span><span class="mf">32.582191</span><span class="p">,</span><span class="nt">"lat"</span><span class="p">:</span><span class="mf">0.31628</span><span class="p">},</span><span class="nt">"country"</span><span class="p">:</span><span class="s2">"UG"</span><span class="p">,</span><span class="nt">"population"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">"sys"</span><span class="p">:{</span><span class="nt">"population"</span><span class="p">:</span><span class="mi">0</span><span class="p">}},</span><span class="nt">"cnt"</span><span class="p">:</span><span class="mi">7</span><span class="p">,</span><span class="nt">"list"</span><span class="p">:[{</span><span class="nt">"dt"</span><span class="p">:</span><span class="mi">1424685600</span><span class="p">,</span><span class="nt">"temp"</span><span class="p">:{</span><span class="nt">"day"</span><span class="p">:</span><span class="mf">27.61</span><span class="p">,</span><span class="nt">"min"</span><span class="p">:</span><span class="mf">25.94</span><span class="p">,</span><span class="nt">"max"</span><span class="p">:</span><span class="mf">27.61</span><span class="p">,</span><span class="nt">"night"</span><span class="p">:</span><span class="mf">25.94</span><span class="p">,</span><span class="nt">"eve"</span><span class="p">:</span><span class="mf">27.52</span><span class="p">,</span><span class="nt">"morn"</span><span class="p">:</span><span class="mf">27.61</span><span class="p">},</span><span class="nt">"pressure"</span><span class="p">:</span><span class="mf">895.42</span><span class="p">,</span><span class="nt">"humidity"</span><span class="p">:</span><span class="mi">85</span><span class="p">,</span><span class="nt">"weather"</span><span class="p">:[{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">800</span><span class="p">,</span><span class="nt">"main"</span><span class="p">:</span><span class="s2">"Clear"</span><span class="p">,</span><span class="nt">"description"</span><span class="p">:</span><span class="s2">"sky is clear"</span><span class="p">,</span><span class="nt">"icon"</span><span class="p">:</span><span class="s2">"01d"</span><span class="p">}],</span><span class="nt">"speed"</span><span class="p">:</span><span class="mf">2.57</span><span class="p">,</span><span class="nt">"deg"</span><span class="p">:</span><span class="mi">225</span><span class="p">,</span><span class="nt">"clouds"</span><span class="p">:</span><span class="mi">0</span><span class="p">},{</span><span class="nt">"dt"</span><span class="p">:</span><span class="mi">1424772000</span><span class="p">,</span><span class="nt">"temp"</span><span class="p">:{</span><span class="nt">"day"</span><span class="p">:</span><span class="mf">27.19</span><span class="p">,</span><span class="nt">"min"</span><span class="p">:</span><span class="mf">25.45</span><span class="p">,</span><span class="nt">"max"</span><span class="p">:</span><span class="mf">27.26</span><span class="p">,</span><span class="nt">"night"</span><span class="p">:</span><span class="mf">25.91</span><span class="p">,</span><span class="nt">"eve"</span><span class="p">:</span><span class="mf">26.88</span><span class="p">,</span><span class="nt">"morn"</span><span class="p">:</span><span class="mf">25.45</span><span class="p">},</span><span class="nt">"pressure"</span><span class="p">:</span><span class="mf">898.48</span><span class="p">,</span><span class="nt">"humidity"</span><span class="p">:</span><span class="mi">88</span><span class="p">,</span><span class="nt">"weather"</span><span class="p">:[{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">802</span><span class="p">,</span><span class="nt">"main"</span><span class="p">:</span><span class="s2">"Clouds"</span><span class="p">,</span><span class="nt">"description"</span><span class="p">:</span><span class="s2">"scattered clouds"</span><span class="p">,</span><span class="nt">"icon"</span><span class="p">:</span><span class="s2">"03d"</span><span class="p">}],</span><span class="nt">"speed"</span><span class="p">:</span><span class="mf">0.76</span><span class="p">,</span><span class="nt">"deg"</span><span class="p">:</span><span class="mi">192</span><span class="p">,</span><span class="nt">"clouds"</span><span class="p">:</span><span class="mi">44</span><span class="p">},{</span><span class="nt">"dt"</span><span class="p">:</span><span class="mi">1424858400</span><span class="p">,</span><span class="nt">"temp"</span><span class="p">:{</span><span class="nt">"day"</span><span class="p">:</span><span class="mf">27.89</span><span class="p">,</span><span class="nt">"min"</span><span class="p">:</span><span class="mf">25.83</span><span class="p">,</span><span class="nt">"max"</span><span class="p">:</span><span class="mf">27.89</span><span class="p">,</span><span class="nt">"night"</span><span class="p">:</span><span class="mf">25.83</span><span class="p">,</span><span class="nt">"eve"</span><span class="p">:</span><span class="mf">27.24</span><span class="p">,</span><span class="nt">"morn"</span><span class="p">:</span><span class="mf">26.06</span><span class="p">},</span><span class="nt">"pressure"</span><span class="p">:</span><span class="mf">897.35</span><span class="p">,</span><span class="nt">"humidity"</span><span class="p">:</span><span class="mi">83</span><span class="p">,</span><span class="nt">"weather"</span><span class="p">:[{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">800</span><span class="p">,</span><span class="nt">"main"</span><span class="p">:</span><span class="s2">"Clear"</span><span class="p">,</span><span class="nt">"description"</span><span class="p">:</span><span class="s2">"sky is clear"</span><span class="p">,</span><span class="nt">"icon"</span><span class="p">:</span><span class="s2">"01d"</span><span class="p">}],</span><span class="nt">"speed"</span><span class="p">:</span><span class="mi">5</span><span class="p">,</span><span class="nt">"deg"</span><span class="p">:</span><span class="mi">149</span><span class="p">,</span><span class="nt">"clouds"</span><span class="p">:</span><span class="mi">0</span><span class="p">},{</span><span class="nt">"dt"</span><span class="p">:</span><span class="mi">1424944800</span><span class="p">,</span><span class="nt">"temp"</span><span class="p">:{</span><span class="nt">"day"</span><span class="p">:</span><span class="mf">27.72</span><span class="p">,</span><span class="nt">"min"</span><span class="p">:</span><span class="mf">25.75</span><span class="p">,</span><span class="nt">"max"</span><span class="p">:</span><span class="mf">27.98</span><span class="p">,</span><span class="nt">"night"</span><span class="p">:</span><span class="mf">25.75</span><span class="p">,</span><span class="nt">"eve"</span><span class="p">:</span><span class="mf">27.68</span><span class="p">,</span><span class="nt">"morn"</span><span class="p">:</span><span class="mf">26.26</span><span class="p">},</span><span class="nt">"pressure"</span><span class="p">:</span><span class="mf">897.27</span><span class="p">,</span><span class="nt">"humidity"</span><span class="p">:</span><span class="mi">84</span><span class="p">,</span><span class="nt">"weather"</span><span class="p">:[{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">800</span><span class="p">,</span><span class="nt">"main"</span><span class="p">:</span><span class="s2">"Clear"</span><span class="p">,</span><span class="nt">"description"</span><span class="p">:</span><span class="s2">"sky is clear"</span><span class="p">,</span><span class="nt">"icon"</span><span class="p">:</span><span class="s2">"01d"</span><span class="p">}],</span><span class="nt">"speed"</span><span class="p">:</span><span class="mf">5.32</span><span class="p">,</span><span class="nt">"deg"</span><span class="p">:</span><span class="mi">153</span><span class="p">,</span><span class="nt">"clouds"</span><span class="p">:</span><span class="mi">0</span><span class="p">},{</span><span class="nt">"dt"</span><span class="p">:</span><span class="mi">1425031200</span><span class="p">,</span><span class="nt">"temp"</span><span class="p">:{</span><span class="nt">"day"</span><span class="p">:</span><span class="mf">28.62</span><span class="p">,</span><span class="nt">"min"</span><span class="p">:</span><span class="mf">24.01</span><span class="p">,</span><span class="nt">"max"</span><span class="p">:</span><span class="mf">28.62</span><span class="p">,</span><span class="nt">"night"</span><span class="p">:</span><span class="mf">24.01</span><span class="p">,</span><span class="nt">"eve"</span><span class="p">:</span><span class="mf">25.85</span><span class="p">,</span><span class="nt">"morn"</span><span class="p">:</span><span class="mf">25.76</span><span class="p">},</span><span class="nt">"pressure"</span><span class="p">:</span><span class="mf">896.46</span><span class="p">,</span><span class="nt">"humidity"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">"weather"</span><span class="p">:[{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">800</span><span class="p">,</span><span class="nt">"main"</span><span class="p">:</span><span class="s2">"Clear"</span><span class="p">,</span><span class="nt">"description"</span><span class="p">:</span><span class="s2">"sky is clear"</span><span class="p">,</span><span class="nt">"icon"</span><span class="p">:</span><span class="s2">"01d"</span><span class="p">}],</span><span class="nt">"speed"</span><span class="p">:</span><span class="mf">1.96</span><span class="p">,</span><span class="nt">"deg"</span><span class="p">:</span><span class="mi">82</span><span class="p">,</span><span class="nt">"clouds"</span><span class="p">:</span><span class="mi">6</span><span class="p">},{</span><span class="nt">"dt"</span><span class="p">:</span><span class="mi">1425117600</span><span class="p">,</span><span class="nt">"temp"</span><span class="p">:{</span><span class="nt">"day"</span><span class="p">:</span><span class="mf">28.42</span><span class="p">,</span><span class="nt">"min"</span><span class="p">:</span><span class="mf">24.35</span><span class="p">,</span><span class="nt">"max"</span><span class="p">:</span><span class="mf">28.42</span><span class="p">,</span><span class="nt">"night"</span><span class="p">:</span><span class="mf">24.35</span><span class="p">,</span><span class="nt">"eve"</span><span class="p">:</span><span class="mf">25.87</span><span class="p">,</span><span class="nt">"morn"</span><span class="p">:</span><span class="mf">24.72</span><span class="p">},</span><span class="nt">"pressure"</span><span class="p">:</span><span class="mf">896.7</span><span class="p">,</span><span class="nt">"humidity"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">"weather"</span><span class="p">:[{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">800</span><span class="p">,</span><span class="nt">"main"</span><span class="p">:</span><span class="s2">"Clear"</span><span class="p">,</span><span class="nt">"description"</span><span class="p">:</span><span class="s2">"sky is clear"</span><span class="p">,</span><span class="nt">"icon"</span><span class="p">:</span><span class="s2">"01d"</span><span class="p">}],</span><span class="nt">"speed"</span><span class="p">:</span><span class="mf">0.91</span><span class="p">,</span><span class="nt">"deg"</span><span class="p">:</span><span class="mi">300</span><span class="p">,</span><span class="nt">"clouds"</span><span class="p">:</span><span class="mi">2</span><span class="p">},{</span><span class="nt">"dt"</span><span class="p">:</span><span class="mi">1425204000</span><span class="p">,</span><span class="nt">"temp"</span><span class="p">:{</span><span class="nt">"day"</span><span class="p">:</span><span class="mf">28.51</span><span class="p">,</span><span class="nt">"min"</span><span class="p">:</span><span class="mf">24.47</span><span class="p">,</span><span class="nt">"max"</span><span class="p">:</span><span class="mf">28.51</span><span class="p">,</span><span class="nt">"night"</span><span class="p">:</span><span class="mf">24.47</span><span class="p">,</span><span class="nt">"eve"</span><span class="p">:</span><span class="mf">25.89</span><span class="p">,</span><span class="nt">"morn"</span><span class="p">:</span><span class="mf">25.62</span><span class="p">},</span><span class="nt">"pressure"</span><span class="p">:</span><span class="mf">895.82</span><span class="p">,</span><span class="nt">"humidity"</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">"weather"</span><span class="p">:[{</span><span class="nt">"id"</span><span class="p">:</span><span class="mi">800</span><span class="p">,</span><span class="nt">"main"</span><span class="p">:</span><span class="s2">"Clear"</span><span class="p">,</span><span class="nt">"description"</span><span class="p">:</span><span class="s2">"sky is clear"</span><span class="p">,</span><span class="nt">"icon"</span><span class="p">:</span><span class="s2">"01d"</span><span class="p">}],</span><span class="nt">"speed"</span><span class="p">:</span><span class="mf">1.69</span><span class="p">,</span><span class="nt">"deg"</span><span class="p">:</span><span class="mi">198</span><span class="p">,</span><span class="nt">"clouds"</span><span class="p">:</span><span class="mi">4</span><span class="p">}]}</span></code></pre></div>


<p>Once you have the JSON file, create a folder somewhere on your PC (call it whatever you want) and save it there. Then change directory to that directory in your terminal or command prompt(windows users), using the cd command.</p>

<p>Then when you&rsquo;re in that directory, type this out in your terminal</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="gp">$ </span>python -m SimpleHTTPServer</code></pre></div>


<p>This command starts up a local server that serves the contents of the current directory.</p>

<p>If that went well, you should see something like this</p>

<div class="highlight"><pre><code class="language-shell" data-lang="shell">Serving HTTP on 0.0.0.0 port 8000 ...</code></pre></div>


<p>Now go to <a href="http://localhost:8000/city_name.json">http://localhost:8000/city_name.json</a> in your browser.
If you get your json data returned, then high five. You have brought the cloud down to earth.</p>

<h2>Now for the Android part</h2>

<p>This is the code that was fetching the data from the open weather map API, in the doInBackground method of the
FetchWeather AsyncTask.</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="kd">final</span> <span class="n">String</span> <span class="n">FORECAST_BASE_URL</span> <span class="o">=</span> <span class="s">"http://api.openweathermap.org/data/2.5/forecast/daily?"</span><span class="o">;</span>
 <span class="kd">final</span> <span class="n">String</span> <span class="n">QUERY_PARAM</span> <span class="o">=</span> <span class="s">"q"</span><span class="o">;</span>
 <span class="kd">final</span> <span class="n">String</span> <span class="n">FORMAT_PARAM</span> <span class="o">=</span> <span class="s">"mode"</span><span class="o">;</span>
 <span class="kd">final</span> <span class="n">String</span> <span class="n">UNITS_PARAM</span> <span class="o">=</span> <span class="s">"units"</span><span class="o">;</span>
 <span class="kd">final</span> <span class="n">String</span> <span class="n">DAYS_PARAM</span> <span class="o">=</span> <span class="s">"cnt"</span><span class="o">;</span>
 <span class="n">Uri</span> <span class="n">builtUri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">FORECAST_BASE_URL</span><span class="o">).</span><span class="na">buildUpon</span><span class="o">()</span>
                        <span class="o">.</span><span class="na">appendQueryParameter</span><span class="o">(</span><span class="n">QUERY_PARAM</span><span class="o">,</span> <span class="n">params</span><span class="o">[</span><span class="mi">0</span><span class="o">])</span>
                        <span class="o">.</span><span class="na">appendQueryParameter</span><span class="o">(</span><span class="n">FORMAT_PARAM</span><span class="o">,</span> <span class="n">format</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">appendQueryParameter</span><span class="o">(</span><span class="n">UNITS_PARAM</span><span class="o">,</span> <span class="n">units</span><span class="o">)</span>
                        <span class="o">.</span><span class="na">appendQueryParameter</span><span class="o">(</span><span class="n">DAYS_PARAM</span><span class="o">,</span> <span class="n">Integer</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">numDays</span><span class="o">))</span>
                        <span class="o">.</span><span class="na">build</span><span class="o">();</span>



                <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">builtUri</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span></code></pre></div>


<p>In order to fetch from local host, we&rsquo;re going to modify it a little.
First of all, one limitation of our offline server is we cant support url params.
But that doesn&rsquo;t really matter, since we just want to fetch the weather data into the app.
We&rsquo;re not interested in the data&rsquo;s accuracy.</p>

<p>Something else to note, is that when using the Android Virtual Device (emulator), localhost becomes 10.0.2.2</p>

<p>When using Genymotion emulator, localhost is 192.168.56.1</p>

<p>If you&rsquo;re using a physical device, you&rsquo;ll need to be on the same network as your PC, in which case, you need replace localhost with your computer&rsquo;s current IP.</p>

<p>Add this line of code to the doInBackground method of the Fetch AsyncTask, just above the line that instantiaties the url. Remember to comment it out when you want to fetch from the internet.</p>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="cm">/*in case using stock emulator*/</span>
<span class="n">Uri</span> <span class="n">builtUri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"http://10.0.2.2:8000/city_name.json"</span><span class="o">).</span><span class="na">buildUpon</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>

<span class="cm">/* in case using genymotion emulator*/</span>
<span class="n">Uri</span> <span class="n">builtUri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"http://192.168.56.1:8000/city_name.json"</span><span class="o">).</span><span class="na">buildUpon</span><span class="o">().</span><span class="na">build</span><span class="o">();</span>

<span class="cm">/*in case of physical device*/</span>
<span class="n">Uri</span> <span class="n">builtUri</span> <span class="o">=</span> <span class="n">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"http://ip_address:8000/city_name.json"</span><span class="o">).</span><span class="na">buildUpon</span><span class="o">().</span><span class="na">build</span><span class="o">();</span></code></pre></div>


<p>And voila, you&rsquo;ve successfully connected sunshine to the local &lsquo;cloud&rsquo;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reflections of a Programmer]]></title>
    <link href="http://atimothee.github.io/blog/2014/08/02/reflections-of-a-programmer/"/>
    <updated>2014-08-02T02:09:34+03:00</updated>
    <id>http://atimothee.github.io/blog/2014/08/02/reflections-of-a-programmer</id>
    <content type="html"><![CDATA[<p>Every once in a while I like to reflect on life. And there’s no better time than now. I literally have nothing to chase, no deadline to beat, no books, no exams. So I’ve been thinking, alot about the unobvious benefits of being a software developer.</p>

<p>Programming involves a lot of thinking and overtime, it changes the way you think about life and stuff in general. So here are five important lessons that I’ve learned through my experience writing code for the most part of my waking hours.</p>

<!-- more -->


<p><strong>1. It’s okay to fail</strong></p>

<blockquote><p>&ldquo;If at first you don&rsquo;t succeed, call it version 1.0 - Unknown&rdquo;</p></blockquote>

<p>The error log is the developer’s best friend. Errors, exceptions and bugs are all part of the game. Errors<em>(read failures)</em> ought not to be dreaded, but should instead be thought of as the blueprint for how to fix the program or code to run better. Even the mighty Apple and Microsoft of this world have shipped buggy software before. Some have been <a href="http://www.huffingtonpost.com/2013/09/25/apple-maps-bad_n_3990340.html">more embarassing</a> than others but the most important thing is that they release updates and patches. When you fail, instead of stagnating in misery, find out what could have caused it, fix it and release an update. Don&rsquo;t let failure keep you from moving.</p>

<p><strong>2. Faith</strong><br>
A lot of software developers are willing to take on work they have no idea how to do <em>(Not sure about most, but at least I am)</em>. I think it’s partly because of the excitement of trying out something new, but also because we&rsquo;ve gotten away with it in the past. Somehow, I’ve learned to have the confidence that things will pan out okay, and I&rsquo;ll deliver, no matter how humongous the task at hand is.</p>

<p><strong>3. Great software evolves <em>(Embrace Change)</em> </strong></p>

<blockquote><p>“To improve is to change, to be perfect is to change often” - Winston Churchill</p></blockquote>

<p>If you own a smart device, then I’m sure you receive notifications of apps that want to update almost every week or even every day.</p>

<p>Software changes a lot over its lifetime. The Google home page today is very different from the <a href="http://en.wikipedia.org/wiki/File:Google1998.png">first one in 1998</a>. The same goes for Microsoft Windows and many other programs.</p>

<p>Building software has taught me to embrace change, even radical change. So much changes in so little time in the software industry. The rapid pace of innovation renders some technologies obsolete, so one has to be willing to adapt and try out new stuff. This leads me to the next lesson.</p>

<p><strong>4. Let go</strong><br>
In line with lesson #3, one thing development has taught me is the art of letting go. Sometimes you have to let go of that piece of code that you spent hours or days writing, either because it&rsquo;s either <a href="http://en.wikipedia.org/wiki/Code_smell">smelly</a> or it&rsquo;s just no longer relevant. Such is the nature of the industry, it moves so fast that at one point or another, you may have to <a href="http://www.infoq.com/articles/twitter-java-use">rewrite your app</a> simply because there&rsquo;s a newer or better way of implementing your solution. And such is life, as we grow, our priorities tend to shift. Therefore, embrace change.</p>

<blockquote><p>“When you become a software engineer, you have signed a life-long pact to never stop learning” - Unknown</p></blockquote>

<p>Nothing cements this more than <a href="http://techcrunch.com/2014/06/02/apple-launches-swift-a-new-programming-language-for-writing-ios-and-os-x-apps/">the news a few weeks back</a> that Apple released a new programming language. Although Objective-C hasn’t been trashed per se, iOS development will shift to <a href="https://developer.apple.com/swift/">Swift</a> as the primary language, so iOS devs have no choice but to adapt to the change.</p>

<p><strong>5. Give back to the community: Freely you have received, freely you should give</strong></p>

<blockquote><p>&ldquo;If I have seen further than others, it is by standing upon the shoulders of giants.&rdquo; - Isaac Newton</p></blockquote>

<p>The average developer is bound to use some open-source library or tool in their work. Big software companies have open-sourced a lot of their software projects and libraries in this spirit. Open-source has driven the software industry to where it is today, so we’re indebited to give back to the software community and society at large.</p>

<p>But even outside the software industry, many products today wouldn&rsquo;t be here without some of the work done by some people generations ago. So every once in a while, do something for community&rsquo;s sake.</p>

<p><strong>The downside:</strong><br>
You cant roll back life:
If you’re familiar with version control, then you know that you can roll back to a previous commit, in case you encounter serious problems with your code base and it will be like it never happened. Unfortunately in the real world, when you eff up, as much as you can move on, the scars remain.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Stars of 2013: Remembering the Fallen Soldiers]]></title>
    <link href="http://atimothee.github.io/blog/2013/12/30/the-stars-of-2013-remembering-the-fallen-soldiers/"/>
    <updated>2013-12-30T20:05:15+03:00</updated>
    <id>http://atimothee.github.io/blog/2013/12/30/the-stars-of-2013-remembering-the-fallen-soldiers</id>
    <content type="html"><![CDATA[<p>If you watch <a href="http://www.imdb.com/title/tt1796960/">Homeland</a> or are familiar with CIA operation, then you probably know what happens when an agent dies in the line of service. They become a star, which is placed on <a href="http://en.wikipedia.org/wiki/CIA_Memorial_Wall">the memorial wall</a> at an emotional ceremony and words along these lines will be said -</p>

<blockquote><p>“For the men and women of the CIA, this constellation is more than a memorial, more than a quiet tribute. Each star holds memories of a brave intelligence officer whose example we follow, a treasured colleague whose wisdom we keep, or a lost friend we will miss. <!-- more -->They are our heroes, and that’s how we’ll remember them”</p></blockquote>

<p>Now in my line of work, these agents take on another form. If I’m to borrow Mr. Wonderful’s analogy from <a href="http://www.imdb.com/title/tt1442550/">Shark Tank</a> -</p>

<blockquote><p>“Here’s how I think of my money – as soldiers – I send them out to war everyday. I want them to take prisoners and come home, so there’s more of them”.</p></blockquote>

<p>I share the same sentiment with him, except that in my case my devices are the soldiers. Unfortunately, some times these soldiers don’t make it back from the battle. As this year winds down, I have three stars to put up and I think they deserve honourable mention here.</p>

<p><strong>1. Special Agent HP P</strong><br>
<img src="http://atimothee.github.io/images/hp_probook.jpg" /></p>

<p>This guy was the true definition of “Service above self”. He was always up for the task, even when I asked for the impossible from him. He went through a number of clean installations but still emerged sentient. Dude condensed a whole flask of water but still continued diligently serving. I couldn’t have asked for more from you agent. Unfortunately, Kampala’s sharp guys managed to snack you away from me.(A story for another day). You, agent HP P saw me advance from Hello World! to real world code, and for that I’m truly grateful.</p>

<p><strong>2. Agent 3GS</strong><br>
<img src="http://atimothee.github.io/images/iphone_3gs.jpg" /></p>

<p>Another great agent. Unfortunately he entered a comma that he’ll probably never recover from. The experts call it a bricked state. My futile jailbreaking attempts to keep him up to date with Apple are responsible for his demise. But nonetheless, his was a life like no other. He introduced me to the world of smartphones.</p>

<p><strong>3. Agent WD</strong><br>
<img src="http://atimothee.github.io/images/mypassport_hdd.jpg" /></p>

<p>Truly spectacular agent. You gave me oodles of space to download &amp; collect everything I deemed interesting. Yours was perhaps the most untimely departure of all. One fall and alas, you were gone forever and so were more than 500 gigs worth of entertainment, never to be seen again. I know some people who’ll probably miss you more than I will.</p>
]]></content>
  </entry>
  
</feed>
